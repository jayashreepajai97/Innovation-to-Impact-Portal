<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InnovationPortalService</name>
    </assembly>
    <members>
        <member name="M:InnovationPortalService.Controllers.RESTAPIAdminController.AddRoleToUser(InnovationPortalService.Requests.RestAPIAddRoleRequest)">
            <summary>
            This API is used for Adding Role to User.
            </summary>
            <param name="req">Request must required the parameter RoleId and In Authorization  Field must requird SessionToken and CallerID which is generated by Authenticate API.</param>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIAddRoleResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIAdminController.SearchUser(System.String)">
            <summary>
            This API is used for searching user.
            </summary>
            <param name="SearchName">Request must required the parameter SearchName and In Authorization  Field must requird SessionToken and CallerID which is generated by Authenticate API.</param>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPISearchUserResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIAdminController.DeleteCategory(System.Int32)">
            <summary>
            This API is used for Deleting Idea category.
            </summary>
            <param name="CategoryId">Request must required the parameter Category and In Authorization  Field must requird SessionToken and CallerID which is generated by Authenticate API.</param>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIDeleteIdeaCategoryResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIAdminController.GetCategories">
            <summary>
            This API is used for fetching Idea category.
            </summary>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIGetIdeaCategoryResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIAdminController.AddCategory(System.String)">
            <summary>
            This API is used for Adding Idea category.
            </summary>
            <param name="Category">Request must required the parameter CategoriesName and In Authorization Field must requird SessionToken and CallerID which is generated by Authenticate API.</param>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIAddIdeaCategoryResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIAdminController.UpdateCategory(IdeaDatabase.Requests.RestAPICatrgoryRequest)">
            <summary>
            This API is used for updating the Idea category.
            </summary>
            <param name="req">Request must required Category and ID and in  Authorization  Field SessionToken and CallerID which is generated by Authenticate API.</param>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIUpdateCategoryResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIAdminController.AddChallenge(System.String)">
            <summary>
            This API is used for Adding a new challenge.
            </summary>
            <param name="ChallengeName">Request must required the parameter CategoriesName and In Authorization Field must requird SessionToken and CallerID which is generated by Authenticate API.</param>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIAddIdeaChallengeResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIAdminController.GetChallenges">
            <summary>
            This API is used for fetching idea challenges.
            </summary>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIGetIdeaChallengeResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.InsertIdea(InnovationPortalService.Requests.RestAPISubmitIdeaRequest)">
            <summary>
            This API is used for adding a new Idea.
            </summary>
            <param name="req">Request must required the parameter IdeaID and CommentDescription and In Authorization  Field must requird SessionToken and CallerID which is generated by Authenticate API.</param>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPISubmitIdeaResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.AddIdeaAttachments">
            <summary>
            This API is used for adding a new Idea Attachment.
            </summary>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>SubmitIdeaAttachmentResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.UpdateSensitive(System.Int32,System.Boolean)">
            <summary>
            This API is used for updating Idea stealth mode.
            </summary>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIUpdateSensitiveResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.UpdateIdeaStatus(System.Int32)">
            <summary>
            This API is used for updating the idea status.
            </summary>
            <param name="IdeaID">Request must required the parameter IdeaID and IdeaStatus</param>      
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIAddIdeaStateResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.AddIdeaComment(IdeaDatabase.Requests.RestAPIAddUserCommentRequest)">
            <summary>
            This API is used for Adding the Idea Comment.
            </summary>
            <param name="req">Request must required the parameter IdeaID and CommentDescription and In Authorization  Field must requird SessionToken and CallerID which is generated by Authenticate API.</param>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIAddUserCommentResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.GetIdeaComments(System.Int32)">
            <summary>
            This API is used for fetching User Comments for a specific Idea.
            </summary>
            <param name="IdeaId">Request must required  IdeaId an Authorization  Field must requird SessionToken and CallerID which is generated by Authenticate API.</param>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIGetUserCommentsResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.DeleteIdeaComment(System.Int32)">
            <summary>
            This API is used for Deleting user Comment.
            </summary>
            <param name="IdeaCommentId">Request must required the parameter IdeaCommentId and In Authorization  Field must requird SessionToken and CallerID which is generated by Authenticate API</param>
            <returns>RestAPIDeleteIdeaResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.GetIdeaList(System.Boolean)">
            <summary>
            This API is used for fetching list of Ideas.
            </summary>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIGetUserIdeaResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.GetDetails(System.Int32)">
            <summary>
            This API is used for fetching details of idea.
            </summary>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RESTGetUserIdeaDetailsResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.GetIdeaReviewsList">
            <summary>
            This API is used for fetching reviewers Ideas List .
            </summary>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIGetUserIdeaStatusResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.GetIdeaSponsorsList">
            <summary>
            This API is used for fetching sponsors Ideas List .
            </summary>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIGetUserIdeaStatusResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.GetPublicList(System.Int32,System.Boolean)">
            <summary>
            This API is used for fetching list of public ideas .
            </summary>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIGetUserIdeaResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.AddIdeaCommentReply(IdeaDatabase.Requests.RestAPIAddCommentReplyRequest)">
            <summary>
            This API is used for Adding reply to idea comment.
            </summary>
            <param name="req">Request must required the parameter IdeaID and CommentDescription and In Authorization  Field must requird SessionToken and CallerID which is generated by Authenticate API.</param>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIAddCommentReplyResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.SearchIdea(System.String)">
            <summary>
             This API is used for searching Idea.
            </summary>
            <param name="SearchText">Request must required the parameters.</param>
            <returns>RestAPISearchIdeaResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.UpdateDetails(IdeaDatabase.Requests.RestAPIUpdateIdeaRequest,System.Int32)">
            <summary>
            This API is used for updating the idea details.
            </summary>
            <param name="IdeaId">Request must required the parameter IdeaID</param>
             <param name="req">Request must required the parameter  IdeaRequest </param>     
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIUpdateIdeaResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.SendEmail(System.String)">
            <summary>
             This API is used for sending an email notifications.
            </summary>
            <param name="EmailAddress">Request must required the parameters.</param>
            <returns>HttpResponseMessage</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.AddIntellectualProperty">
            <summary>
            This API is used for Adding the intellectual property for Idea.
            </summary>
            <param >Request must required the FormData.</param>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIAddIntellectualResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.DeleteIntellectualProperty(System.Int32)">
            <summary>
            This API is used for Deleting Intellectual Idea.
            </summary>
            <param name="IntellectualId">Request must required the parameter IntellectualId and In Authorization  Field must requird SessionToken and CallerID which is generated by Authenticate API</param>
            <returns>RestAPIDeleteIntellectResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.UpdateIntellectualProperty">
            <summary>
            This API is used for updating the idea intellectual property details.
            </summary>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIUpdateIntellectResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.GetIntellectualProperty(System.Int32)">
            <summary>
            This API is used for fetching Intellectual property details of idea.
            </summary>
            <param name="IntellectualId">Request must required the parameter IntellectualId</param>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIGetIntellectualResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.UpdateIdeaDraft(IdeaDatabase.Requests.RestAPIUpdateIdeaDraftRequest)">
            <summary>
            This API is used for updating the IsDraft flag of existing Idea.
            </summary>
            <param name="req">Request must required the parameter IdeaID and CommentDescription and In Authorization Field must requird SessionToken and CallerID which is generated by Authenticate API.</param>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIUpdateDraftResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.DeleteIdeaAttachment(System.Int32)">
            <summary>
            This API is used for Deleting IdeaAttachment.
            </summary>
            <param name="IdeaAttachmentId">Request must required the parameter IdeaAttachmentId and In Authorization Field must requird SessionToken and CallerID which is generated by Authenticate API</param>
            <returns>RestAPIDeleteAttachmentResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.GetIdeaMetrics(System.Int32)">
            <summary>
            This API is used for fetching Ideas metrics.
            </summary>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIGetIdeaMetricsResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.ArchiveIdea(IdeaDatabase.Requests.RestAPIArchiveIdeaRequest)">
            <summary>
            This API is used for Idea Archive.
            </summary>
            <param name="req">Request must required the parameter IdeaID and CommentDescription and In Authorization Field must requird SessionToken and CallerID which is generated by Authenticate API.</param>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIArchiveIdeaResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.GetArchivedIdeaList">
            <summary>
            This API is used for fetching list of Archived Ideas.
            </summary>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIGetArchiveIdeaResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIIdeaController.GetIdeaAttachments(System.Int32)">
            <summary>
            This API is used for fetching attachments list of idea.
            </summary>
            <param name="IdeaId">Request must required the parameter IdeaId</param>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIGetAttachmentsResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIProfileController.Login(IdeaDatabase.Credentials.RESTAPILoginCredentials)">
            <summary>
            Allows login to HPID profile using username and password.
            </summary>
            <remarks>No authentication required</remarks>
            <param name="req">Request must contain deviceToken, username password other fields are optional. Other fields are optional</param>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIProfileController.Logout">
            <summary>
            Invalidates the users HPID session. This requires the user to login on that device for using the active session.
            </summary>
            <remarks>Authentication required</remarks>
            <response code="200">Successfully processed - Check FaultItemList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIProfileController.GetUserRoles">
            <summary>
            This API is used for fetching Role.
            </summary>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RESTAPIGetRolesResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIProfileController.AddRole(IdeaDatabase.Requests.RestAPIAddRolesRequest)">
            <summary>
            This API is used for Adding Role.
            </summary>
            <param name="req">Request must required the parameter RoleName and In Authorization  Feild must requird SessionToken and CallerID which is generated by Authenticate API.</param>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
            <returns>RestAPIAddRoleResponse</returns>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIAuthController.Authenticate(IdeaDatabase.Credentials.RESTAPIAuthCredentials)">
            <summary>
            Exchanges access code obtained from central forms for a session token generated by the Profile API. The refresh token from HPID is stored in DB and used subsequently for authenticating operations in Methone and HPID.
            </summary>
            <remarks>No authentication required</remarks>
            <param name="req">Request must contain accesscode and redirecturl. Other parameters are optional.</param>
            <response code="200">Successfully processed - Check ErrorList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
        </member>
        <member name="M:InnovationPortalService.Controllers.RESTAPIAuthController.Logout">
            <summary>
            Invalidates the users HPID session. This requires the user to login on that device for using the active session.
            </summary>
            <remarks>Authentication required</remarks>
            <response code="200">Successfully processed - Check FaultItemList for possible errors</response>
            <response code="400">Invalid JSON - Syntax error in request body</response>
        </member>
        <member name="T:InnovationPortalService.Responses.Faults">
            <summary>
            This class should contain all possible faults, that this service can report. Everywhere when response is created
            developer should use Fault from this list instead of creating one on their own. 
            </summary>
        </member>
        <member name="P:InnovationPortalService.Responses.Faults.UnMappedError">
            <summary>
            Fault returned when some error message, rule, or other fail sent by other service was not mapped to 
            unique fault in our service - should be avoided
            </summary>
        </member>
        <member name="P:InnovationPortalService.Responses.Faults.EmailExists">
            <summary>
            Fault returned when user with this mail already exist
            </summary>
        </member>
        <member name="P:InnovationPortalService.Responses.Faults.UserIdExists">
            <summary>
            Fault returned when user when we try to create new profile and user with this id already exists
            </summary>
        </member>
        <member name="P:InnovationPortalService.Responses.Faults.EmailAddressNotFound">
            <summary>
            Fault returned when email address, that represents customer id is not found
            </summary>
        </member>
        <member name="P:InnovationPortalService.Responses.Faults.PasswordTooShort">
            <summary>
            Fault returned when password is too short
            </summary>
        </member>
        <member name="P:InnovationPortalService.Responses.Faults.AuthServiceNotAvailable">
            <summary>
            Fault returned when HPP is not available
            </summary>
        </member>
        <member name="P:InnovationPortalService.Responses.Faults.ResetGuidNotFound">
            <summary>
            THIS SHOULD BE CLARIFIED - I don't know what this fault (and related field) is used for - Kuba 
            </summary>
        </member>
        <member name="P:InnovationPortalService.Responses.Faults.UserNameIsTheSame">
            <summary>
            Fault returned when change id is requested, but new and old ids are same
            </summary>
        </member>
        <member name="P:InnovationPortalService.Responses.Faults.InvalidSerialNumber">
            <summary>
            Fault returned when device serial number is invalid
            </summary>
        </member>
        <member name="P:InnovationPortalService.Responses.Faults.MissingCdaxRequestField">
            <summary>
            CDAX service related errors
            </summary>
        </member>
        <member name="M:InnovationPortalService.Utils.FileValidator.#ctor">
            <summary>
            This class snould not be instantiated out of the hierarchy chain. 
            It serves only as a base for other specific file validators.
            </summary>
        </member>
        <member name="T:InnovationPortalService.Utils.FileValidator.FileType">
            <summary>
            Valid attachment file types supported in CDAX API request
            </summary>
        </member>
        <member name="P:InnovationPortalService.Utils.InMemoryMultipartFormDataStreamProvider.restAPIIdeaSupportingRequest">
            <summary>
            bind the multipart/formdata request to object
            </summary>
        </member>
        <member name="M:InnovationPortalService.Utils.InMemoryMultipartFormDataStreamProvider.ExecutePostProcessingAsync">
            <summary>  
            Read the non-file contents as form data.  
            </summary>  
            <returns></returns>  
        </member>
        <member name="M:InnovationPortalService.Utils.InMemoryMultipartFormDataStreamProvider.UnquoteToken(System.String)">
            <summary>  
            Remove bounding quotes on a token if present  
            </summary>  
            <param name="token">Token to unquote.</param>  
            <returns>Unquoted token.</returns>  
        </member>
        <member name="M:InnovationPortalService.Utils.JsonUtils.RemoveField(Newtonsoft.Json.Linq.JObject,System.String[])">
            <summary>
            Returns a new instance of the Json object without the given fields
            </summary>
            <param name="jsonObject">Json object to remove the fields from</param>
            <param name="fields">List of fields to remove from the Json object</param>
            <returns></returns>
        </member>
        <member name="M:InnovationPortalService.Utils.JsonUtils.ExtractField(Newtonsoft.Json.Linq.JObject,System.String[])">
            <summary>
            Returns a Json object with the selected fields extracted from the given Json
            </summary>
            <param name="jsonObject">Json object to extract the fields from</param>
            <param name="fields">Fields to extract from the Json object</param>
            <returns></returns>
        </member>
        <member name="M:InnovationPortalService.Utils.JsonUtils.DoesContainValidValue(Newtonsoft.Json.Linq.JArray)">
            <summary>
            Checks whether at least on of the elements of 
            the input array contain non-null value
            </summary>
            <param name="array">JArray to verify</param>
            <returns>
            True  - If at least one of the elements has non-null value. 
            False - otherwise.
            </returns>
        </member>
        <member name="M:InnovationPortalService.Utils.JsonUtils.DoesContainValidStringValue(Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="keyName"></param>
            <returns></returns>
        </member>
        <member name="T:Filters.ExceptionFilter">
            <summary>
            This filter catches all previously unhandled exceptions and build response 
            based on ResponseBase and puts Fault into ErrorList
            </summary>
        </member>
        <member name="M:Filters.ExceptionFilter.OnException(System.Web.Http.Filters.HttpActionExecutedContext)">
            <summary>
            Method called to handle exception
            </summary>
            <param name="context">Provided by environment</param>
        </member>
    </members>
</doc>
